#!/bin/bash
set -euo pipefail

# 사용자 정보 및 경로 설정
USER_NAME=$(whoami)
USER_HOME="/home/$USER_NAME"
SERVER_DIR="$USER_HOME/palworld"
CONFIG_DIR="$SERVER_DIR/Pal/Saved/Config/LinuxServer"
SAVE_DIR="$SERVER_DIR/Pal/Saved/SaveGames/0/0123456789ABCDEF0123456789ABCDEF"
GITHUB_REPO="https://raw.githubusercontent.com/palbungi/palworld-googlecloud/main"

# 진행 상태 출력 함수
print_step() {
    echo -e "\n\033[1;32m>>> $1\033[0m"
}

# 오류 처리 함수
handle_error() {
    echo -e "\n\033[1;31m[ERROR] $1\033[0m"
    echo "문제가 발생하여 스크립트를 종료합니다."
    exit 1
}

# 시스템 정보 확인
print_step "시스템 정보 확인"
echo "사용자: $USER_NAME"
echo "홈 디렉토리: $USER_HOME"
echo "서버 디렉토리: $SERVER_DIR"
echo "OS: $(lsb_release -ds)"
echo "Kernel: $(uname -r)"

# 한국 시간 설정
print_step "한국 시간대 설정"
sudo timedatectl set-timezone Asia/Seoul || handle_error "시간대 설정 실패"
echo "현재 시간: $(date)"

# 필수 패키지 설치
print_step "필수 패키지 설치"
export DEBIAN_FRONTEND=noninteractive
echo "tzdata tzdata/Areas select Asia" | sudo debconf-set-selections
echo "tzdata tzdata/Zones/Asia select Seoul" | sudo debconf-set-selections

sudo apt-get update || handle_error "패키지 목록 업데이트 실패"
sudo apt-get install -y debconf-utils unzip cron gosu libgl1 libvulkan1 tzdata \
    nano man-db systemd net-tools iproute2 dialog apt-transport-https \
    ca-certificates gnupg software-properties-common util-linux || handle_error "패키지 설치 실패"

# 시스템 업그레이드
print_step "시스템 업그레이드"
sudo apt-get -o Dpkg::Options::="--force-confdef" \
            -o Dpkg::Options::="--force-confold" \
            upgrade -y || handle_error "시스템 업그레이드 실패"

# Docker 설치
print_step "Docker 설치"
sudo groupadd docker || true
sudo usermod -aG docker $USER_NAME || handle_error "사용자 Docker 그룹 추가 실패"

sudo mkdir -p /etc/apt/keyrings || handle_error "디렉토리 생성 실패"
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
    sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg || handle_error "GPG 키 다운로드 실패"

echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
    https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null || handle_error "저장소 추가 실패"

sudo apt-get update || handle_error "Docker 저장소 업데이트 실패"
sudo apt-get install -y docker-ce docker-ce-cli containerd.io || handle_error "Docker 설치 실패"

# Docker Compose 설치
print_step "Docker Compose 설치"
DOCKER_COMPOSE_URL="https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)"
sudo curl -L "$DOCKER_COMPOSE_URL" -o /usr/local/bin/docker-compose || handle_error "Docker Compose 다운로드 실패"
sudo chmod +x /usr/local/bin/docker-compose || handle_error "Docker Compose 실행 권한 설정 실패"

# Docker 권한 설정
sudo chmod 666 /var/run/docker.sock || handle_error "Docker 소켓 권한 설정 실패"

# 서버 파일 다운로드
print_step "PalWorld 서버 설정 파일 다운로드"

# docker-compose.yml 다운로드
wget -q "$GITHUB_REPO/docker-compose.yml" -O "$USER_HOME/docker-compose.yml" || handle_error "docker-compose.yml 다운로드 실패"

# config.env 다운로드
wget -q "$GITHUB_REPO/config.env" -O "$USER_HOME/config.env" || handle_error "config.env 다운로드 실패"

# 정기 관리 스크립트 다운로드
wget -q "$GITHUB_REPO/regular_maintenance.sh" -O "$USER_HOME/regular_maintenance.sh" || handle_error "정기 관리 스크립트 다운로드 실패"
chmod +x "$USER_HOME/regular_maintenance.sh" || handle_error "스크립트 실행 권한 설정 실패"
sed -i "s|docker-compose.yml|$USER_HOME/docker-compose.yml|g" "$USER_HOME/regular_maintenance.sh" || handle_error "스크립트 경로 수정 실패"

# 서버 설정 디렉토리 생성
print_step "서버 설정 디렉토리 생성"
mkdir -p "$CONFIG_DIR" || handle_error "설정 디렉토리 생성 실패"

# 설정 파일 다운로드
wget -q "$GITHUB_REPO/Engine.ini" -O "$CONFIG_DIR/Engine.ini" || handle_error "Engine.ini 다운로드 실패"
wget -q "$GITHUB_REPO/GameUserSettings.ini" -O "$CONFIG_DIR/GameUserSettings.ini" || handle_error "GameUserSettings.ini 다운로드 실패"

# 저장 디렉토리 생성
print_step "게임 저장 디렉토리 생성"
mkdir -p "$SAVE_DIR" || handle_error "저장 디렉토리 생성 실패"

# 서버 설정 수정
print_step "서버 설정 수정"
PUBLIC_IP=$(curl -s ifconfig.me)
sed -i "s/^REGION=.*/REGION=$PUBLIC_IP/" "$USER_HOME/config.env" || handle_error "REGION 설정 수정 실패"
sed -i "s/^PUBLIC_IP=.*/PUBLIC_IP=$PUBLIC_IP/" "$USER_HOME/config.env" || handle_error "PUBLIC_IP 설정 수정 실패"

echo "현재 공인 IP: $PUBLIC_IP"
echo -e "\n\033[1;33m=== 서버 설정 편집기 실행 ===\033[0m"
echo -e "편집을 마치면 \033[38;5;208mCtrl+O\033[0m, \033[1;33mEnter\033[0m, \033[1;32mCtrl+X\033[0m 를 눌러 저장하세요."
sleep 5

# config.env 파일 직접 편집
nano "$USER_HOME/config.env"

# cron 설정
print_step "정기 관리 작업 설정"
wget -q "$GITHUB_REPO/timer.sh" -O "$USER_HOME/timer.sh" || handle_error "타이머 스크립트 다운로드 실패"
chmod +x "$USER_HOME/timer.sh" || handle_error "스크립트 실행 권한 설정 실패"
sed -i "s|/home/\$(whoami)/|$USER_HOME/|g" "$USER_HOME/timer.sh" || handle_error "스크립트 경로 수정 실패"

bash "$USER_HOME/timer.sh" || handle_error "cron 작업 설정 실패"
sudo systemctl restart cron || handle_error "cron 서비스 재시작 실패"
sudo systemctl enable cron || handle_error "cron 서비스 활성화 실패"

# PalWorld 서버 시작
print_step "PalWorld 서버 시작"
docker-compose -f "$USER_HOME/docker-compose.yml" up -d || handle_error "서버 시작 실패"

# Portainer 설치
print_step "Portainer 설치"
PORTAINER_DIR="$USER_HOME/portainer"
mkdir -p "$PORTAINER_DIR" || handle_error "Portainer 디렉토리 생성 실패"
wget -q "$GITHUB_REPO/portainer/docker-compose.yml" -O "$PORTAINER_DIR/docker-compose.yml" || handle_error "Portainer 설정 다운로드 실패"
docker-compose -f "$PORTAINER_DIR/docker-compose.yml" up -d || handle_error "Portainer 시작 실패"

#!/bin/bash
set -euo pipefail

# ... (스크립트 상단 부분은 동일하게 유지) ...

# 완료 메시지
clear
echo -e "\n\033[1;35m================================================"
echo "       PalWorld 서버 설치 완료!"
echo "================================================\033[0m"

# 서버 접속 정보 추출
SERVER_IP=$(curl -s ifconfig.me)
SERVER_PASSWORD=$(grep '^SERVER_PASSWORD=' "$USER_HOME/config.env" | cut -d '=' -f2- | tr -d '"')

# 게임 서버 접속 정보 출력
echo -e "게임 서버 접속 정보:"
echo -e "  아이피: ${SERVER_IP}:8211"
echo -e "  비밀번호: \033[1;32m${SERVER_PASSWORD}\033[0m"

# Portainer 접속 정보 출력
echo -e "\n서버 관리 인터페이스:"
echo -e "  http://${SERVER_IP}:8888"

# 중요 정보 출력
echo -e "\n중요 정보:"
echo "1. 서버가 완전히 시작되기까지 3-5분이 소요될 수 있습니다"
echo "2. 서버 설정 파일: $USER_HOME/config.env"
echo "3. 서버 로그 확인: docker-compose -f $USER_HOME/docker-compose.yml logs"

# 보안 상태 메시지
if [ -z "$SERVER_PASSWORD" ]; then
    echo -e "\n※ \033[1;33m주의: 비밀번호가 설정되지 않아 공개 서버입니다\033[0m"
else
    echo -e "\n※ \033[1;32m보안: 비밀번호가 설정된 비공개 서버입니다\033[0m"
fi

echo -e "\n이 창은 닫아도 됩니다. 즐거운 게임 되세요!"
echo -e "\033[1;35m================================================\033[0m"
